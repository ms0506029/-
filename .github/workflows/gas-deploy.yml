name: Deploy GAS via CLASP

on:
  push:
    branches: [ main ]   # 或你想要自動部署的分支

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install clasp
        run: npm i -g @google/clasp

      # 把 Secrets 寫成檔案（Heredoc 可安全處理多行 JSON）
      - name: Write ~/.clasprc.json from secret
        run: |
          mkdir -p ~/.config/configstore
          cat > ~/.clasprc.json <<'JSON'
          ${{ secrets.CLASPRC_JSON }}
          JSON
          # 也寫一份到 configstore 以符合舊版 clasp 搜尋位置（保險）
          cat > ~/.config/configstore/clasp.json <<'JSON'
          ${{ secrets.CLASPRC_JSON }}
          JSON

      - name: Write oauth_client.json from secret
        run: |
          cat > ./oauth_client.json <<'JSON'
          ${{ secrets.OAUTH_CLIENT_JSON }}
          JSON

      # 確保 .clasp.json 正確（你已經有就略過；若要覆寫可在這裡 echo）
      # - name: Write .clasp.json (optional)
      #   run: |
      #     cat > ./.clasp.json <<'JSON'
      #     {"scriptId":"<你的ScriptID>","rootDir":"gas","projectId":"github-473513"}
      #     JSON

      - name: Show clasp status (optional)
        run: clasp login --status || true

      - name: Push source
        run: clasp push -f

      - name: Deploy to existing prod deployment
        env:
          DEPLOY_ID: ${{ secrets.GAS_DEPLOYMENT_ID }}
        run: |
          clasp deploy --deploymentId "$DEPLOY_ID" --description "ci $GITHUB_SHA"

      # 可選：簡單 smoke test
      - name: Smoke test hitting Web App
        if: ${{ secrets.WEB_APP_URL != '' }}
        run: |
          curl -sSfL "${{ secrets.WEB_APP_URL }}?route=profile" | head -c 500 || exit 1
